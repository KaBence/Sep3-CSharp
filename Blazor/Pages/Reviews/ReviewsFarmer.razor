@page "/ReviewsFarmer/{farmer}"
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@inject IReviewServices reviewServices;
@inject NavigationManager navMgr;

<div class="container-fluid">
    <AuthorizeView Roles="Farmer">
        <Authorized>
            @if (reviews == null)
            {
                <p>Loading...</p>
                <p>Make sure that username input field is not empty</p>
            }
            else if (!reviews.Any())
            {
                if (farmer.Equals(""))
                {
                    <p>Input for farmer's username needed</p>
                }
                else
                {
                    <p>No Reviews to display</p>
                }
            }
            else
            {
                <div class="items col-12 row">
                    @foreach (var item in reviews)
                    {
                        <div class="card col-12 col-md-2">
                            <h1>Farmer: @item.FarmerID</h1>
                            <label>Overall: @item.Star/5</label>
                            <label>@item.Text</label>
                            <label>Posted by: @item.CustomerID</label>
                            <label>Comments:</label>
                            <div class="commentTable">
                                <table>
                                    @foreach (var comment in @item.Comments)
                                    {
                                        <tr>
                                            <td>
                                                @comment.Username:
                                            </td>
                                            <td>
                                                @comment.Text
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                        <div>
                            <button class="btn" @onclick="@(() => navMgr.NavigateTo($"/PostComment/{@item.FarmerID}/{@item.CustomerID}/{@item.OrderId}"))">Comment</button>
                        </div>
                    }
                </div>
            }
        </Authorized>

    </AuthorizeView>
</div >

@code
{
    [Parameter]
    public string farmer { set; get; }

    private IEnumerable<Review> reviews = new List<Review>();


    protected override async Task OnInitializedAsync()
    {
        if (farmer != "")
        {
            reviews = await reviewServices.GetReviewsByFarmer(farmer);
        }
        else
        {
            reviews = null;
            farmer = "";
        }
    }
}