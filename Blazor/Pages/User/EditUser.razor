@page "/EditUser"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@using System.Security.Claims
@using Blazor.Services
@using global::Shared.Models
@inject IUserService userService;
@inject IAuthService authService;
@inject NavigationManager navMgr;

<AuthorizeView Roles="Customer">
    <NotAuthorized>

        <div>
            <p>You are not logged in!</p>
        </div>

    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Edit User</h3>
            <div class="field">
                <label class="col-5">Phone Number: </label>
                <label class="col-5">@phoneNumber</label>
            </div>
            <div class="field">
                <label class="col-5">Password: </label>
                <input class="col-5" type="password" @bind="password"/>
            </div>
            <div class="field">
                <label class="col-5">Repeat Password: </label>
                <input class="col-5" type="password" @bind="repeatpassword"/>
            </div>
            <div class="field">
                <label class="col-5">Firstname: </label>
                <input class="col-5" type="text" @bind="firstName"/>
            </div>
            <div class="field">
                <label class="col-5">Lastname: </label>
                <input class="col-5" type="text" @bind="lastName"/>
            </div>
            <div class="field">
                <label class="col-5">Address: </label>
                <input class="col-5" type="text" @bind="address"/>
            </div>
            @if (role.Equals("Farmer"))
            {
                <div class="field">
                    <label class="col-5">Pesticides: </label>
                    <input type="radio" name="pest" onchange="@(() => IDK())"/>
                    <label>True</label>
                    <input type="radio" name="pest" onchange="@(() => IDK())"/>
                    <label>False</label>
                </div>
                <div class="field">
                    <label class="col-5">Farm name: </label>
                    <input class="col-5" type="text" @bind="farmName"/>
                </div>
            }
            <div class="field">
                <button class="btn" @onclick="EditUserAsync">Edit</button>
            </div>
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color: red">@msg</label>
            }

        </div>
    </Authorized>
</AuthorizeView>


@code {
    private string? phoneNumber;
    private string password = "";
    private string repeatpassword = "";
    private string errorLabel = "";
    private string address = "";
    private string firstName = "";
    private string lastName = "";
    private bool pesticides = false;
    private string farmName;
    private bool isFarmer;
    private string role ;

    private bool asd;


    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        phoneNumber = authService.GetAuthAsync().Result.Identity!.Name;
        role =  authService.GetAuthAsync().Result.Claims.First(claim => claim.Type.Equals(ClaimTypes.Role)).Value;
        if (role.Equals("Farmer"))
        {
            EditFarmerDto farmer = await userService.GetFarmerByIdAsync(phoneNumber);
        }
        else
        {
            EditCustomerDto customer = await userService.GetCustomerByIdAsync(phoneNumber);
            password = customer.Password;
            repeatpassword = customer.Password;
            firstName = customer.FirstName;
            lastName = customer.LastName;
            address = customer.Address;
        }
    }

    private async Task EditUserAsync()
    {
        if (role.Equals("Farmer"))
        {
           msg = await userService.EditFarmer(new EditFarmerDto(phoneNumber,password,repeatpassword,firstName,lastName,address,pesticides,farmName));
        }
        else
        {
            msg = await userService.EditCustomer(new EditCustomerDto(phoneNumber,password,repeatpassword,firstName,lastName,address));
        }
        navMgr.NavigateTo("/");
    }


   


    // for pesticides
    private void IDK()
    {
        asd = !asd;
    }
}