@page "/EditUser"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs
@using System.Security.Claims
@using Blazor.Services
@using global::Shared.Models
@inject IUserService userService;
@inject IAuthService authService;
@inject NavigationManager navMgr;

<AuthorizeView>
    <NotAuthorized>

        <div>
            <p>You are not logged in!</p>
        </div>

    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Edit User</h3>
            <div class="field">
                <label class="col-5">Username: </label>
                <label class="col-5">@phoneNumber</label>
            </div>
            <div class="field">
                <label class="col-5">Password: </label>
                <input class="col-5" type="password" @bind="password"/>
            </div>
            <div class="field">
                <label class="col-5">Repeat Password: </label>
                <input class="col-5" type="password" @bind="repeatpassword"/>
            </div>
            <div class="field">
                <label class="col-5">Firstname: </label>
                <input class="col-5" type="text" @bind="firstName"/>
            </div>
            <div class="field">
                <label class="col-5">Lastname: </label>
                <input class="col-5" type="text" @bind="lastName"/>
            </div>
            <div class="field">
                <label class="col-5">Address: </label>
                <input class="col-5" type="text" @bind="address"/>
            </div>
            @if (role.Equals("Farmer"))
            {
                <div class="field">
                    <label class="col-5">Pesticides: </label>
                    <input type="radio" name="pest" checked="@pesticides"  onchange="@(() => IDK())"/>
                    <label>True</label>
                    <input type="radio" name="pest" checked="@pesticidesFalses" onchange="@(() => IDK())"/>
                    <label>False</label>
                </div>
                <div class="field">
                    <label class="col-5">Farm name: </label>
                    <input class="col-5" type="text" @bind="farmName"/>
                </div>
            }
            <div class="field">
                <button class="btn" @onclick="EditUserAsync">Edit</button>
            </div>
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color: red">@msg</label>
            }

        </div>
    </Authorized>
</AuthorizeView>


@code {
    private string? phoneNumber;
    private string password = "";
    private string repeatpassword = "";
    private string errorLabel = "";
    private string address = "";
    private string firstName = "";
    private string lastName = "";
    private bool pesticides;
    private bool pesticidesFalses;
    private string farmName;
    private bool isFarmer;
    private string role ;


    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        if (authService.GetAuthAsync().Result.Identity!=null)
        {
            phoneNumber =authService.GetAuthAsync().Result.Identity!.Name;
            role =  authService.GetAuthAsync().Result.Claims.First(claim => claim.Type.Equals(ClaimTypes.Role)).Value;
            if (role.Equals("Farmer"))
            {
                EditFarmerDto farmer = await userService.GetFarmerByIdAsync(phoneNumber);
                firstName = farmer.FirstName;
                lastName = farmer.LastName;
                address = farmer.Address;
                pesticides = farmer.Pesticides;
                pesticidesFalses = !pesticides;
                farmName = farmer.FarmName;
            }
            else
            {
                EditCustomerDto customer = await userService.GetCustomerByIdAsync(phoneNumber);
           
                firstName = customer.FirstName;
                lastName = customer.LastName;
                address = customer.Address;
            }
        }
    }

    private async Task EditUserAsync()
    {
        if (role.Equals("Farmer"))
        {
            try
            {
                msg = await userService.EditFarmer(new EditFarmerDto(phoneNumber,password,repeatpassword,firstName,lastName,address,pesticides,farmName));
                if (!msg.Equals("Success!"))
                {
                    throw new Exception(msg);
                }
                navMgr.NavigateTo("/MyProfile"); 
            }
            catch (Exception e)
            {
                msg = e.Message;
            }
           
        }
        else
        {
            try
            {
                msg = await userService.EditCustomer(new EditCustomerDto(phoneNumber,password,repeatpassword,firstName,lastName,address));
                if (!msg.Equals("Success!"))
                {
                    throw new Exception(msg);
                }
                navMgr.NavigateTo("/"); 
            }
            catch (Exception e)
            {
                msg = e.Message;
            }
        }
    }


   


    // for pesticides
    private void IDK()
    {
        pesticides = !pesticides;
        pesticidesFalses = !pesticidesFalses;
    }
}