@inject NavigationManager navMgr;
@page "/Register"
@using HttpClients.ClientInterfaces
@using Sep
@using global::Shared.DTOs
@inject IUserService userService

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Register</h3>
            <div class="field">
                <label class="col-5">User name:</label>
                <input class="col-5" type="text" @bind="phoneNumber"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Password:</label>
                <input class="col-5" type="password" @bind="password"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Repeat Password:</label>
                <input class="col-5" type="password" @bind="repeatpassword"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Address</label>
                <input class="col-5" type="text" @bind="address"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">First Name:</label>
                <input class="col-5" type="text" @bind="firstName"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Last Name:</label>
                <input class="col-5" type="text" @bind="lastName"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Pesticides:</label>
                <input class="col-5" type="text" @bind="pesticides"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Farm Name:</label>
                <input class="col-5" type="text" @bind="farmName"/>
            </div>
            <div class="field">
                <label class="col-5" style="text-align: center">Customer:</label>
                <input type="radio" name="isFarmer" @onclick="@(()=>IDK())"/>
            </div>
            
            
            
            
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="btn" @onclick="RegisterAsync">Register</button>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity!.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>


@code {
    private string phoneNumber="";
    private string password="";
    private string repeatpassword="";
    private string errorLabel="";
    private string address="";
    private string firstName="";
    private string lastName="";
    private bool pesticides;
    private string farmName;
    private bool isFarmer;



    private void IDK()
    {
        if (isFarmer == true)
        {
            isFarmer = false;
        }
        else
            isFarmer = true;
    }
    
    private async Task RegisterAsync()
    {
        errorLabel = "";
        try
        {
            if (isFarmer == false)
            {
                RegisterCustomerDto dto = new RegisterCustomerDto(phoneNumber, password, repeatpassword, firstName, lastName, address);
                string message= await userService.Register(dto);
                errorLabel = message;
                if (message=="Success!")
                {
                    navMgr.NavigateTo("/");
                }
                
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
}